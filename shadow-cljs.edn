;;; Only :kaocha-test has been used much.
{:deps {:aliases [#_:light-client :kaochaRM]} ; If this works, then it contradicts what I said in the exerciser about :deps not being merged.
 :nrepl {:port 7004} ; exerciser uses 7002.
 :builds
 {:lib-dev {:target :browser
            :output-dir "resources/public/js"
            :compiler-options {:externs ["datascript/externs.js"]}
            :modules  {:app {:init-fn dev.dutil/start}} ; Ideally would be rad-mapper.evaluate/start, but then dev.dutil isn't loaded!...
            :devtools {:after-load dev.dutil/reload}}   ; ... LATER: Even with these, sometimes it doesn't load  dev.dutil NS.

  :lib     {:target :node-library
            :output-to "lib.js"
            :exports-vars rad-mapper.rewrite/processRad
            :compiler-options {:externs ["datascript/externs.js"]}}

  #_#_:light-client {:target :browser-test ; This is WIP
                 :test-dir         "target/light-test"
                 :output-dir       "resources/public/js"
                 :asset-path       "/js"
                 :runner-ns       shadow.test.browser ; That's the default
                 :compiler-options {:externs ["datascript/externs.js"]}}

  :kaochaRM    {:target           :browser-test
                :test-dir         "target/kaocha-test"
                :runner-ns        kaocha.cljs2.shadow-runner
                :ns-regexp        ".*-test$"
                :compiler-options {:externs ["datascript/externs.js"]}
                :devtools         {:http-port 1818
                                   :http-root "target/kaocha-test"
                                   :after-load dev.kaocha/reload ; dev.kaocha/reload is an attempt to suppress useless log output.
                                   :preloads [lambdaisland.chui.remote #_dev.kaocha/reload]}}

  :script   {:target :node-script
             :source-map true                          ; Default anyway?
             :source-map-include-sources-content true  ; Default anyway?
             :source-map-detail-level :all             ; Not default.
             :main dev.script/main
             :output-to "out/demo-script/script.js"
             :devtools {:before-load-async dev.script/stop
                        :after-load dev.script/start}}}}
